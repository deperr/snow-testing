---

- name: ServiceNow ITSM - Create Change Requests
  hosts: localhost
  gather_facts: false
  
  module_defaults:
    servicenow.itsm.change_request:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
    servicenow.itsm.change_request_info:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        # Optional OAuth configuration (uncomment if using OAuth)
        # client_id: "{{ servicenow_client_id | default(omit) }}"
        # client_secret: "{{ servicenow_client_secret | default(omit) }}"

  tasks:
 
    - name: Create change request in ServiceNow
      register: created_change_request
      when: create_change_request | default(false) | bool
      tags:
        - create
        - change
      servicenow.itsm.change_request:
        state: present
        short_description: "{{ cr_short_description | default('Change request created via AAP') }}"
        description: "{{ cr_description | default('This is a change request created using Ansible Automation Platform') }}"
        priority: "{{ cr_priority | default('medium') }}"
        risk: "{{ cr_risk | default('medium') }}"
        impact: "{{ cr_impact | default('medium') }}"
        type: "{{ cr_type | default('normal') }}"
        category: "{{ cr_category | default('Software') }}"
        requested_by: "{{ cr_requested_by | default(servicenow_username) }}"
        assignment_group: "{{ cr_assignment_group | default('Change Management') }}"
        # justification: "{{ cr_justification | default('Automated change via AAP') }}"
        other:
          state: "{{ cr_state | default('new') }}"

    - name: Display created change request details
      when: 
        - create_change_request | default(false) | bool
        - created_change_request is succeeded
        - created_change_request.record is defined
      tags:
        - create
        - change
      ansible.builtin.debug:
        msg: 
          - "✅ Change request created successfully!"
          - "Number: {{ created_change_request.record.number }}"
          - "Sys ID: {{ created_change_request.record.sys_id }}"
          - "State: {{ created_change_request.record.state }}"
          - "Risk: {{ created_change_request.record.risk }}"
          - "Type: {{ created_change_request.record.type }}"
          - "Assigned to: {{ created_change_request.record.assignment_group }}"
          - "URL: https://{{ servicenow_instance }}/nav_to.do?uri=change_request.do?sys_id={{ created_change_request.record.sys_id }}"

    - name: Create problem record in ServiceNow
      register: created_problem
      when: create_problem | default(false) | bool
      tags:
        - create
        - problem
      servicenow.itsm.problem:
        state: present
        short_description: "{{ problem_short_description | default('Problem created via AAP') }}"
        description: "{{ problem_description | default('This is a problem record created using Ansible Automation Platform') }}"
        priority: "{{ problem_priority | default('3') }}"
        impact: "{{ problem_impact | default('3') }}"
        urgency: "{{ problem_urgency | default('3') }}"
        category: "{{ problem_category | default('Software') }}"
        assignment_group: "{{ problem_assignment_group | default('Problem Management') }}"
        assigned_to: "{{ problem_assigned_to | default('') }}"

    - name: Display created problem details
      when: 
        - create_problem | default(false) | bool
        - created_problem is succeeded
        - created_problem.record is defined
      tags:
        - create
        - problem

      ansible.builtin.debug:
        msg: 
          - "✅ Problem record created successfully!"
          - "📋 Number: {{ created_problem.record.number }}"
          - "🆔 Sys ID: {{ created_problem.record.sys_id }}"
          - "📊 State: {{ created_problem.record.state }}"
          - "⚡ Priority: {{ created_problem.record.priority }}"
          - "👤 Assigned to: {{ created_problem.record.assignment_group }}"
          - "🔗 URL: {{ servicenow_instance }}/nav_to.do?uri=problem.do?sys_id={{ created_problem.record.sys_id }}"

    - name: Display creation summary
      ansible.builtin.debug:
        msg: 
          - "🎉 ServiceNow Ticket Creation Summary"
          - "=====================================  "
          - "{% if created_incident is defined and created_incident is succeeded %}✅ Incident: {{ created_incident.record.number }}{% endif %}"
          - "🕐 Created at: {{ ansible_date_time.iso8601 }}"
          - "👤 Created by: {{ servicenow_username }}"
      tags:
        - create
        - summary

  handlers:
    - name: Send notification on ticket creation
      listen: "notify_ticket_created"
      ansible.builtin.debug:
        msg: "Notification: New ServiceNow tickets have been created and are ready for processing"
