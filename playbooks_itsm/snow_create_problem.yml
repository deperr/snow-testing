---

- name: ServiceNow ITSM - Create Problems
  hosts: localhost
  gather_facts: false
  
  module_defaults:
    servicenow.itsm.problem:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
    servicenow.itsm.problem_info:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
        # Optional OAuth configuration (uncomment if using OAuth)
        # client_id: "{{ servicenow_client_id | default(omit) }}"
        # client_secret: "{{ servicenow_client_secret | default(omit) }}"

  tasks:

    - name: Create problem record in ServiceNow
      register: created_problem
      when: create_problem | default(true) | bool
      tags:
        - create
        - problem
      servicenow.itsm.problem:
        state: present
        short_description: "{{ problem_short_description | default('Problem created via AAP') }}"
        description: "{{ problem_description | default('This is a problem record created using Ansible Automation Platform') }}"
        impact: "{{ problem_impact | default('medium') }}"
        urgency: "{{ problem_urgency | default('medium') }}"
        assigned_to: "{{ problem_assigned_to | default('servicenow_username') }}"

    - name: Display created problem details
      when: 
        - create_problem | default(true) | bool
        - created_problem is succeeded
        - created_problem.record is defined
      tags:
        - create
        - problem

      ansible.builtin.debug:
        msg: 
          - "‚úÖ Problem record created successfully!"
          - "Number: {{ created_problem.record.number }}"
          - "Sys ID: {{ created_problem.record.sys_id }}"
          - "State: {{ created_problem.record.state }}"
          - "Priority: {{ created_problem.record.priority }}"
          - "Assigned to: {{ created_problem.record.assignment_group }}"
          - "URL: {{ servicenow_instance }}/nav_to.do?uri=problem.do?sys_id={{ created_problem.record.sys_id }}"

    - name: Display creation summary
      ansible.builtin.debug:
        msg: 
          - "üéâ ServiceNow Ticket Creation Summary"
          - "=====================================  "
          - "{% if created_change_request is defined and created_change_request is succeeded %}‚úÖ Change Request: {{ created_change_request.record.number }}{% endif %}"
          - "üïê Created at: {{ ansible_date_time.iso8601 }}"
          - "üë§ Created by: {{ servicenow_username }}"
      tags:
        - create
        - summary

  handlers:
    - name: Send notification on ticket creation
      listen: "notify_ticket_created"
      ansible.builtin.debug:
        msg: "Notification: New ServiceNow tickets have been created and are ready for processing"
