---
- name: ServiceNow ITSM - Update Incident (Simple AAP Pattern)
  hosts: localhost
  gather_facts: false
  
  module_defaults:
    servicenow.itsm.incident:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"
    servicenow.itsm.incident_info:
      instance:
        host: "{{ servicenow_instance }}"
        username: "{{ servicenow_username }}"
        password: "{{ servicenow_password }}"

  tasks:
    - name: Display received AAP workflow variables (simple pattern like playbook_two)
      delegate_to: localhost
      run_once: true
      ansible.builtin.debug:
        msg:
          - "ðŸ“‹ Received from AAP Workflow:"
          - "============================="
          - "Incident Sys ID: {{ incident_sys_id }}"
          - "Incident Number: {{ incident_number }}"
          - "Incident URL: {{ incident_url }}"
          - "ServiceNow Instance: {{ servicenow_instance }}"
          - "Workflow Timestamp: {{ workflow_timestamp }}"

    - name: Get current incident details for update
      servicenow.itsm.incident_info:
        sys_id: "{{ incident_sys_id }}"
      register: current_incident_info

    - name: Display current incident details
      ansible.builtin.debug:
        msg:
          - "ðŸ“‹ Current Incident Details"
          - "=========================="
          - "Number: {{ current_incident_info.records[0].number }}"
          - "Sys ID: {{ current_incident_info.records[0].sys_id }}"
          - "State: {{ current_incident_info.records[0].state }}"
          - "Priority: {{ current_incident_info.records[0].priority }}"
          - "Short Description: {{ current_incident_info.records[0].short_description }}"
          - "Assigned to: {{ current_incident_info.records[0].assigned_to | default('Unassigned') }}"
          - "Assignment Group: {{ current_incident_info.records[0].assignment_group | default('None') }}"

    - name: Update incident in ServiceNow
      servicenow.itsm.incident:
        sys_id: "{{ incident_sys_id }}"
        state: present
        # Update assignment
        assignment_group: "{{ incident_assignment_group | default('IT Support') }}"
        assigned_to: "{{ incident_assigned_to | default(omit) }}"
        # Add work notes with workflow context
        work_notes: |
          Updated via AAP Workflow at {{ ansible_date_time.iso8601 }}
          Original creation: {{ workflow_timestamp }}
          Operator: {{ servicenow_username }}
          
          {% if incident_work_notes is defined %}
          {{ incident_work_notes }}
          {% endif %}
        # Update other fields if provided
        short_description: "{{ incident_short_description | default(current_incident_info.records[0].short_description) }}"
        urgency: "{{ incident_urgency | default(current_incident_info.records[0].urgency) }}"
        impact: "{{ incident_impact | default(current_incident_info.records[0].impact) }}"
        # State management
        other:
          state: "{{ incident_state | default('in_progress') }}"
      register: updated_incident

    - name: Display update results
      ansible.builtin.debug:
        msg:
          - "âœ… Incident Updated Successfully!"
          - "================================="
          - "Number: {{ updated_incident.record.number }}"
          - "Sys ID: {{ updated_incident.record.sys_id }}"
          - "State: {{ updated_incident.record.state }}"
          - "Priority: {{ updated_incident.record.priority }}"
          - "Assignment Group: {{ updated_incident.record.assignment_group | default('None') }}"
          - "Last Updated: {{ updated_incident.record.sys_updated_on }}"
          - "ðŸ”— URL: {{ incident_url }}"

    - name: Set results for next workflow step (optional)
      delegate_to: localhost
      run_once: true
      ansible.builtin.set_stats:
        data:
          updated_incident_sys_id: "{{ updated_incident.record.sys_id }}"
          updated_incident_number: "{{ updated_incident.record.number }}"
          updated_incident_state: "{{ updated_incident.record.state }}"
          update_timestamp: "{{ ansible_date_time.iso8601 }}"
          update_successful: true